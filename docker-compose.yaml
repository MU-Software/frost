version: "3.8"

volumes:
  frost-service-volume:

networks:
  frost-network:
    driver: bridge

services:
  db:
    image: postgres:latest
    container_name: frost-db-dev
    restart: unless-stopped
    networks:
      - frost-network
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - frost-service-volume:/var/lib/postgresql/data/
    healthcheck:
      test: pg_isready -U postgres

  redis:
    image: redis:latest
    container_name: frost-redis-dev
    networks:
      - frost-network
    ports:
      - 6379:6379
    command: >
      --requirepass ${REDIS_PASSWORD}
    healthcheck:
      # FROM https://stackoverflow.com/a/71504657/5702135
      test: ["CMD-SHELL", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping", "|", "grep", "PONG"]
      interval: 1s
      timeout: 3s
      retries: 5

  api-server:
    build:
      context: ../
      dockerfile: docker/Dockerfile
      target: runtime
    container_name: frost-api-dev
    command:
      - python3
      - -m
      - gunicorn
      - -k
      - eventlet
      - --log-level
      - INFO
      - -b
      - 0.0.0.0:8808
      - 'app:create_app()'
    env_file:
      - ../.env
    tty: true
    working_dir: /
    networks:
      - frost-network
    ports:
      - 8808:8808
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl --max-time 5 http://localhost:8808/ping"]
      interval: 1s
      timeout: 3s
      retries: 5

  nginx:
    image: nginx:latest
    container_name: frost-nginx-dev
    networks:
      - frost-network
    ports:
      - 80:80
      - 443:443
    depends_on:
      - api-server
      # api-server:
        # condition: service_healthy
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d/:/etc/nginx/conf.d/
      - ./nginx/frontend/:/var/www/
