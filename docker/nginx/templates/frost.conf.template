map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
}

upstream frost-api {
    server frost-api-server:8808;
}

server {
    root /var/www;
    autoindex off;
    index index.html;

    location @maintenance {
        default_type application/json;
        return 503 '{"success":false,"code":503,"sub_code":"backend.maintenance","message":"서버가 잠시 점검중입니다. Server is in the maintenance state for a while."}';
    }

    location / {
        try_files $uri $uri/ =404;
    }

    location /doc/${RESTAPI_VERSION}/ {
        alias /swagger_ui_dist/;
        try_files $uri $uri/ =404;

        location /doc/${RESTAPI_VERSION}/openapi.yaml {
            alias /docs/;
            try_files ${RESTAPI_VERSION}.yaml =404;
        }
    }

    location /api/${RESTAPI_VERSION}/ {
        rewrite ^(/.*)% $1 break;
        error_page 502 = @maintenance;
        proxy_read_timeout 10;
        proxy_connect_timeout 10;

        proxy_redirect off;
        proxy_pass_header Server;
        proxy_set_header Host ${SERVER_NAME};
        proxy_set_header X-Real-IP $realip_remote_addr;
        proxy_set_header X-Scheme $scheme;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://frost-api/api/${RESTAPI_VERSION}/;
    }

    location /api/${RESTAPI_VERSION}/ws {
        rewrite ^(/.*)% $1 break;
        error_page 502 = @maintenance;

        proxy_redirect off;
        proxy_pass_header Server;
        proxy_set_header Host ${SERVER_NAME};
        proxy_set_header X-Real-IP $realip_remote_addr;
        proxy_set_header X-Scheme $scheme;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_http_version 1.1;

        proxy_connect_timeout 7d;
        proxy_send_timeout 7d;
        proxy_read_timeout 7d;

        proxy_pass http://frost-api/api/${RESTAPI_VERSION}/ws;
    }
}
